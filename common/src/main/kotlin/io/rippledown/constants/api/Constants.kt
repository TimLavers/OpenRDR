package io.rippledown.constants.api

const val API_URL = "http://localhost:9090"
const val WAITING_CASES = "/api/waitingCasesInfo"
const val CONDITION_HINTS = "/api/conditionHints"
const val CONDITION_FOR_EXPRESSION = "/api/conditionForExpression"
const val CASE = "/api/case"
const val PROCESS_CASE = "/api/processCase"
const val DELETE_CASE_WITH_NAME = "/api/deleteProcessedCaseWithName"
const val MOVE_ATTRIBUTE = "/api/moveAttribute"
const val GET_OR_CREATE_ATTRIBUTE = "/api/attribute/getOrCreate"
const val SET_ATTRIBUTE_ORDER = "/api/attribute/setOrder"
const val ALL_CONCLUSIONS = "/api/conclusion/all"
const val GET_OR_CREATE_CONCLUSION = "/api/conclusion/getOrCreate"
const val GET_OR_CREATE_CONDITION = "/api/condition/getOrCreate"
const val COMMIT_RULE_SESSION = "/api/buildRule"
const val START_RULE_SESSION = "/api/startRuleSession"
const val CANCEL_RULE_SESSION = "/api/cancelRuleSession"
const val SELECT_CORNERSTONE = "/api/selectCornerstone"
const val UPDATE_CORNERSTONES = "/api/updateCornerstones"
const val EXEMPT_CORNERSTONE = "/api/exemptCornerstone"
const val DEFAULT_KB = "/api/defaultKB"
const val KB_INFO = "/api/kbInfo"
const val DELETE_KB = "/api/deleteKB"
const val KB_LIST = "/api/kbList"
const val CREATE_KB = "/api/createKB"
const val CREATE_KB_FROM_SAMPLE = "/api/createKbFromSample"
const val SELECT_KB = "/api/selectKB"
const val IMPORT_KB = "/api/importKB"
const val EXPORT_KB = "/api/exportKB"